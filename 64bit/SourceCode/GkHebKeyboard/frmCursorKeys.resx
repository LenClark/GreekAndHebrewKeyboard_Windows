<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboxKeys.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVUAAADcCAYAAADAxDKKAAAABGdBTUEAAOD8YVAtlgAAAvdpQ0NQUGhv
        dG9zaG9wIElDQyBwcm9maWxlAAA4y2NgYJ7g6OLkyiTAwFBQVFLkHuQYGREZpcB+noGNgZkBDBKTiwsc
        AwJ8QOy8/LxUBlTAyMDw7RqIZGC4rAsyi4E0wJoMtBhIHwBio5TU4mQg/QWI08tLCoDijDFAtkhSNphd
        AGJnhwQ5A9ktDAxMPCWpFSC9DM75BZVFmekZJQqGlpaWCo4p+UmpCsGVxSWpucUKnnnJ+UUF+UWJJakp
        QLVQO0CA1yW/RME9MTNPwchAlYHKABSOEBYifBBiCJBcWlQGD0oGBgEGBQYDBgeGAIZEhnqGBQxHGd4w
        ijO6MJYyrmC8xyTGFMQ0gekCszBzJPNC5jcsliwdLLdY9VhbWe+xWbJNY/vGHs6+m0OJo4vjC2ci5wUu
        R64t3JrcC3ikeKbyCvFO4hPmm8Yvw79YQEdgh6Cr4BWhVKEfwr0iKiJ7RcNFv4hNEjcSvyJRISkneUwq
        X1pa+oRMmay67C25PnkX+T8KWxULlfSU3iqvVSlQNVH9qXZQvUsjVFNJ84PWAe1JOqm6VnqCeq/0jxgs
        MKw1ijG2NZE3ZTZ9aXbBfKfFEssJVnXWuTZxtoF2rvbWDsaOOk5qzkouCq7ybgruyh7qnrpeJt42Pu6+
        wX4J/vkB9YETg5YG7wq5GPoynClCLtIqKiK6ImZm7J64BwlsibpJYckNKWtSb6ZzZFhkZmbNzb6Yy55n
        n19RsKnwXbF2SVbpqrI3FfqVJVW7ahhrveqm1j9s1GuqaT7bKtdW2H60U7qrqPt0r2pfY//diTaTZk/+
        OzV+2uEZGjP7Z32fkzD39HzzBUsXiSxuXfJtWebyeytDVp1e47J233rLDds2mWzestVk2/YdVjv373bd
        c3Zf2P4HB3MO/TzSfkz8+IqT1qfOnUk+++v8pIval45eSbz67/qcmza37t6pv6d8/8TDvMdiT/Y/y3wh
        8vLg6/y38u8ufGj6ZPr51dcF38N/Cvw69af1n+P//wANAA8013ReGAAAAAlwSFlzAAALEwAACxMBAJqc
        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
        EC2WKgAAAABJRU5ErkJggg==
</value>
  </data>
</root>